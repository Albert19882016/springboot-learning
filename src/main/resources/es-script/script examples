1. ElasticSearch查询
JAVA api代码比较冗长，我们可以采用
1>. 脚本查询
2>. 查询模板查询

先看看elasticsearch官方的script dsl块文本的写法：通过一对"""  """来包含块文本
{
  "query": {
    "function_score": {
      "script_score": {
        "script": {
          "lang": "painless",
          "source": """
            int total = 0;
            for (int i = 0; i < doc['goals'].length; ++i) {
              total += doc['goals'][i];
            }
            return total;
          """
        }
      }
    }
  }
}


GET hockey/_search
{
  "query": {
    "match_all": {}
  },
  "sort": {
    "_script": {
      "type": "string",
      "order": "asc",
      "script": {
        "lang": "painless",
        "source": "doc['first.keyword'].value + ' ' + doc['last.keyword'].value"
      }
    }
  }
}


实战：
1. 集群中创建查询脚本
POST _scripts/search-template
{
  "script":{
    "lang": "mustache",
    "source":"""{
      "from":{{from}},
      "size":{{size}},
      "sort":[{{#toJson}}orderBy{{/toJson}}],
      "query":{
        "function_score":{
          "query":{
            "bool":{
              "filter":[
                {{#toJson}}filters{{/toJson}}
              ],
              "must":[
                {{#toJson}}musts{{/toJson}}
              ]
            }
          }
        }
      }
    }"""
  }
}

可以通过执行 GET _scripts/<script_id>获取脚本信息：
  GET _scripts/search-template

2. 通过map传递参数，五个key分别为 from/size/sort/clauses/matches

3. 也可以用查询模板来简化ES查询 (search template)
POST _search/template/<template_id>
{
    "template": {
        "query": {
            "bool": {
                "must": [
                    {
                        "range": {
                            "create_time": {
                                "gte": "{{earliest}}",
                                "lte": "{{latest}}"
                            }
                        }
                    }
                ]
            }
        },
        "size": 0,
        "aggs": {
            "stats_data": {
                "date_histogram": {
                    "field": "create_time",
                    "interval": "{{interval}}"
                },
                "aggs": {
                    "time": {
                        "cardinality": {
                            "field": "user_id"
                        }
                    }
                }
            }
        }
    }
}